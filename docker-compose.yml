version: '3.8'

services:
  # --- Kafka Infrastructure ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  # --- Observability Infrastructure ---
  prometheus:
    image: prom/prometheus:v2.40.1
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana-oss:9.2.4
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # Disable security for local dev

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  # --- MLflow ---
  mlflow:
    image: python:3.9-slim
    container_name: mlflow_server
    command: >
      bash -c "pip install mlflow boto3 && 
               mlflow server --host 0.0.0.0 --port 5000 
               --default-artifact-root /mlflow/artifacts"
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow_data:/mlflow/artifacts
  # ... (at the end of the services block)

  # --- Application Services ---
  main_app:
    build: ./main_app
    container_name: main_app
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - model_v1

  model_v1:
    build: ./model_v1
    container_name: model_v1

  model_v2_shadow:
    build: ./model_v2_shadow
    container_name: model_v2_shadow

  shadow_consumer:
    build: ./shadow_consumer
    container_name: shadow_consumer
    depends_on:
      - kafka
      - elasticsearch
      - model_v2_shadow